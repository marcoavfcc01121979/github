{"ast":null,"code":"var _jsxFileName = \"/home/marcoavfcc/primeiro-projeto-react/src/pages/Dashboard/index.tsx\";\nimport React, { useState } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories } from './styles';\n\nconst Dashboard = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState([]);\n\n  async function handleAddRepository(event) {\n    if (!newRepo) {\n      setInputError('Digite o nome do repositorio.');\n    }\n\n    event.preventDefault();\n    const response = await api.get(`repos/${newRepo}`);\n    const repository = response.data;\n    setRepositories([...repositories, repository]);\n    setNewRepo('');\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Explore github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Explore reposit\\xF3rios no Github\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepo,\n    onChange: e => setNewRepo(e.target.value),\n    placeholder: \"Digite o nome do rep\\xF3sitorios\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Pesquisar\")), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"a\", {\n    key: repository.full_name,\n    href: \"teste\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: \"Marco Antonio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, repository.description)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/marcoavfcc/primeiro-projeto-react/src/pages/Dashboard/index.tsx"],"names":["React","useState","FiChevronRight","api","Title","Form","Repositories","Dashboard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","handleAddRepository","event","preventDefault","response","get","repository","data","logoImg","e","target","value","map","full_name","owner","avatar_url","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AAEA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAEA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,YAAtB,QAA0C,UAA1C;;AAWA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAe,EAAf,CAAhD;;AAEA,iBAAea,mBAAf,CACEC,KADF,EAEiB;AACf,QAAI,CAACP,OAAL,EAAc;AACZG,MAAAA,aAAa,CAAC,+BAAD,CAAb;AACD;;AACDI,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAJ,CAAqB,SAAQV,OAAQ,EAArC,CAAvB;AAEA,UAAMW,UAAU,GAAGF,QAAQ,CAACG,IAA5B;AAEAP,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBO,UAAlB,CAAD,CAAf;AACAV,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AACD,sBACE,uDACE;AAAK,IAAA,GAAG,EAAEY,OAAV;AAAmB,IAAA,GAAG,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,eAIE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEP,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAEN,OADT;AAEE,IAAA,QAAQ,EAAGc,CAAD,IAAOb,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAF7B;AAGE,IAAA,WAAW,EAAC,kCAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CAJF,eAaE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,YAAY,CAACa,GAAb,CAAkBN,UAAD,iBAChB;AAAG,IAAA,GAAG,EAAEA,UAAU,CAACO,SAAnB;AAA8B,IAAA,IAAI,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEP,UAAU,CAACQ,KAAX,CAAiBC,UAA3B;AAAuC,IAAA,GAAG,EAAC,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAST,UAAU,CAACO,SAApB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,UAAU,CAACU,WAAf,CAFF,CAFF,eAOE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADD,CADH,CAbF,CADF;AA6BD,CAjDD;;AAmDA,eAAetB,SAAf","sourcesContent":["import React, { useState, FormEvent } from 'react';\n\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from '../../assets/logo.svg';\nimport { Title, Form, Repositories } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    if (!newRepo) {\n      setInputError('Digite o nome do repositorio.');\n    }\n    event.preventDefault();\n\n    const response = await api.get<Repository>(`repos/${newRepo}`);\n\n    const repository = response.data;\n\n    setRepositories([...repositories, repository]);\n    setNewRepo('');\n  }\n  return (\n    <>\n      <img src={logoImg} alt=\"Explore github\" />\n      <Title>Explore repositórios no Github</Title>\n\n      <Form onSubmit={handleAddRepository}>\n        <input\n          value={newRepo}\n          onChange={(e) => setNewRepo(e.target.value)}\n          placeholder=\"Digite o nome do repósitorios\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <a key={repository.full_name} href=\"teste\">\n            <img src={repository.owner.avatar_url} alt=\"Marco Antonio\" />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}